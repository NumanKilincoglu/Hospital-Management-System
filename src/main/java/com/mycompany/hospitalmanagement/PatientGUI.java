/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.hospitalmanagement;

import Objects.Admin;
import Objects.Doctor;
import Objects.Patient;
import Objects.Appointment;
import Objects.Prescription;
import Objects.Test;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Paragraph;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author numan.kilincoglu
 */
public class PatientGUI extends javax.swing.JFrame {

    final static String hospitalName = "Royal";
    Test test = new Test();
    Prescription prescription = new Prescription();
    Patient patient = new Patient();
    Patient patientMain = new Patient();
    Admin admin = new Admin();
    Doctor doctorMain = new Doctor();
    Doctor doctor = new Doctor();
    Appointment appointment = new Appointment();
    int selectedDoctID = 0;
    int docBranchID = 0;
    static int selectedBranchID = 0;
    String app_Hour;
    String app_Date;
    Connection conn;
    String patientTCNO = "";

    //I defined my table models which I used them for tables.
    DefaultTableModel patientAppointmentModel = new DefaultTableModel(new Object[][]{},
            new String[]{
                "Hospital Name", "Branch", "Patient Name", "Patient Surname", "Doctor Name", "Appointment Date", "Status"
            }) {

        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    DefaultTableModel testModel = new DefaultTableModel(new Object[][]{},
            new String[]{
                "Test ID", "Doctor Name", "Patient Name", "Test Type", "Test Date", "Result Date", "Cost"
            }) {

        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    DefaultTableModel prescriptionModel = new DefaultTableModel(new Object[][]{},
            new String[]{
                "ID", "Doctor Name", "Patient Name", "Branch", "Date",}) {

        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    /**
     * Creates new form HastaBolumu
     */
    public PatientGUI() throws SQLException {
//        initComponents();
//        Closing();
//        Date date1 = new Date();
//        appointment_date.setMinSelectableDate(date1);
//        tbl_appointmentHistory.setModel(patientAppointmentModel);
//        tests_table.setModel(testModel);
//        tbl_prescriptions.setModel(prescriptionModel);
//        tbl_appointmentHistory.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
//        tbl_appointmentHistory.getTableHeader().setOpaque(false);
//        tbl_appointmentHistory.getTableHeader().setBackground(new Color(32, 136, 203));
//        tbl_appointmentHistory.getTableHeader().setForeground(new Color(0, 0, 0));
//        tbl_appointmentHistory.setRowHeight(25);
//        butonList();
//        showPatientInfo();
//        displayTime();
//        listBranches();
//        listAppointmentHistory();
//        testHistory();
//        presCriptList();
//        toggleUpdateListener();

    }

    public PatientGUI(String tcno) {
        initComponents();
        this.patientTCNO = tcno;
        patientMain = patientMain.getPatient(this.patientTCNO);
        firstAdjustments();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        pnl_main = new javax.swing.JPanel();
        patient_informations = new javax.swing.JPanel();
        lbl_isim1 = new javax.swing.JLabel();
        lbl_isim2 = new javax.swing.JLabel();
        lbl_name = new javax.swing.JLabel();
        lbl_isim4 = new javax.swing.JLabel();
        lbl_isim5 = new javax.swing.JLabel();
        lbl_isim6 = new javax.swing.JLabel();
        lbl_dateBirth = new javax.swing.JLabel();
        lbl_palcebirth = new javax.swing.JLabel();
        lbl_surname = new javax.swing.JLabel();
        lbl_phone = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        tab_panel = new javax.swing.JTabbedPane();
        tab_appointment = new javax.swing.JPanel();
        pnl_upper = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        branch_combo = new javax.swing.JComboBox<>();
        doctor_combo = new javax.swing.JComboBox<>();
        appointment_date = new com.toedter.calendar.JDateChooser();
        btn_availableHours = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        btn_1 = new javax.swing.JButton();
        btn_2 = new javax.swing.JButton();
        btn_4 = new javax.swing.JButton();
        btn_5 = new javax.swing.JButton();
        btn_3 = new javax.swing.JButton();
        btn_6 = new javax.swing.JButton();
        btn_7 = new javax.swing.JButton();
        btn_8 = new javax.swing.JButton();
        btn_9 = new javax.swing.JButton();
        btn_10 = new javax.swing.JButton();
        btn_11 = new javax.swing.JButton();
        btn_15 = new javax.swing.JButton();
        btn_16 = new javax.swing.JButton();
        btn_18 = new javax.swing.JButton();
        btn_17 = new javax.swing.JButton();
        btn_12 = new javax.swing.JButton();
        btn_13 = new javax.swing.JButton();
        btn_14 = new javax.swing.JButton();
        btn_19 = new javax.swing.JButton();
        btn_20 = new javax.swing.JButton();
        btn_21 = new javax.swing.JButton();
        btn_22 = new javax.swing.JButton();
        btn_23 = new javax.swing.JButton();
        btn_25 = new javax.swing.JButton();
        btn_24 = new javax.swing.JButton();
        pnl_randevuBilgi = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lbl_doc_name = new javax.swing.JLabel();
        lbl_selected_branch = new javax.swing.JLabel();
        lbl_app_hour = new javax.swing.JLabel();
        lbl_app_date = new javax.swing.JLabel();
        btn_new_appointment = new javax.swing.JButton();
        tab_appointmentHistory = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_appointmentHistory = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        btn_appRefresh = new javax.swing.JButton();
        tab_profile = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        adres_txt = new javax.swing.JTextArea();
        txt_name = new javax.swing.JTextField();
        txt_surname = new javax.swing.JTextField();
        mail_txt = new javax.swing.JTextField();
        txt_placebirth = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txt_tc = new javax.swing.JTextField();
        txt_datebirth = new javax.swing.JTextField();
        btn_saveProfile = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        txt_phone = new javax.swing.JFormattedTextField();
        jLabel31 = new javax.swing.JLabel();
        btn_updateProfile = new javax.swing.JToggleButton();
        tab_tests = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tests_table = new javax.swing.JTable();
        jLabel25 = new javax.swing.JLabel();
        btn_saveTest = new javax.swing.JButton();
        btn_inspectTest = new javax.swing.JButton();
        btn_testRefresh = new javax.swing.JButton();
        tab_prescriptions = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbl_prescriptions = new javax.swing.JTable();
        btn_pressRefresh = new javax.swing.JButton();
        btn_prescriptionSave = new javax.swing.JButton();
        btn_presInspect = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        lbl_displayHour = new javax.swing.JLabel();
        lbl_displayDate = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_settings = new javax.swing.JMenu();
        menu_colorback = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        menu_close = new javax.swing.JMenuItem();
        menu_dateLabels = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Patient Section");

        pnl_main.setBackground(new java.awt.Color(120, 255, 255));
        pnl_main.setForeground(new java.awt.Color(187, 78, 128));

        patient_informations.setBackground(new java.awt.Color(170, 255, 255));
        patient_informations.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "Patient Information", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 14), new java.awt.Color(0, 0, 0))); // NOI18N
        patient_informations.setForeground(new java.awt.Color(0, 0, 0));
        patient_informations.setFont(new java.awt.Font("Franklin Gothic Demi", 1, 12)); // NOI18N

        lbl_isim1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lbl_isim1.setForeground(new java.awt.Color(0, 0, 0));
        lbl_isim1.setText("Phone:");

        lbl_isim2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lbl_isim2.setForeground(new java.awt.Color(0, 0, 0));
        lbl_isim2.setText("Surname:");

        lbl_name.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        lbl_isim4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lbl_isim4.setForeground(new java.awt.Color(0, 0, 0));
        lbl_isim4.setText("Date Of Birth:");

        lbl_isim5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lbl_isim5.setForeground(new java.awt.Color(0, 0, 0));
        lbl_isim5.setText("Place Of Birth:");

        lbl_isim6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lbl_isim6.setForeground(new java.awt.Color(0, 0, 0));
        lbl_isim6.setText("Name: ");

        lbl_dateBirth.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        lbl_palcebirth.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        lbl_surname.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        lbl_phone.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        javax.swing.GroupLayout patient_informationsLayout = new javax.swing.GroupLayout(patient_informations);
        patient_informations.setLayout(patient_informationsLayout);
        patient_informationsLayout.setHorizontalGroup(
            patient_informationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patient_informationsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(patient_informationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(patient_informationsLayout.createSequentialGroup()
                        .addGroup(patient_informationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(patient_informationsLayout.createSequentialGroup()
                                .addComponent(lbl_isim1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_phone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(patient_informationsLayout.createSequentialGroup()
                                .addComponent(lbl_isim6, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_name, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                            .addGroup(patient_informationsLayout.createSequentialGroup()
                                .addComponent(lbl_isim2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_surname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addComponent(jSeparator3)
                    .addComponent(jSeparator4)
                    .addGroup(patient_informationsLayout.createSequentialGroup()
                        .addComponent(lbl_isim4, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_dateBirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator5)
                    .addGroup(patient_informationsLayout.createSequentialGroup()
                        .addComponent(lbl_isim5, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_palcebirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        patient_informationsLayout.setVerticalGroup(
            patient_informationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patient_informationsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(patient_informationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_isim6, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(lbl_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patient_informationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_isim2, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(lbl_surname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(patient_informationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patient_informationsLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lbl_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(patient_informationsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_isim1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patient_informationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_isim4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_dateBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(patient_informationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_isim5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_palcebirth, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77))
        );

        tab_panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tab_panel.setForeground(new java.awt.Color(255, 255, 255));
        tab_panel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N

        tab_appointment.setBackground(new java.awt.Color(170, 255, 255));
        tab_appointment.setForeground(new java.awt.Color(102, 255, 255));

        pnl_upper.setBackground(new java.awt.Color(255, 255, 255));
        pnl_upper.setForeground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Branch:");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Doctor:");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Appointment Date:");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Available Hours:");

        branch_combo.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        branch_combo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                branch_comboİtemStateChanged(evt);
            }
        });

        doctor_combo.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        doctor_combo.setForeground(new java.awt.Color(0, 0, 0));
        doctor_combo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                doctor_comboİtemStateChanged(evt);
            }
        });

        appointment_date.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N

        btn_availableHours.setBackground(new java.awt.Color(120, 255, 255));
        btn_availableHours.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btn_availableHours.setForeground(new java.awt.Color(0, 0, 0));
        btn_availableHours.setText("Show Available Hours");
        btn_availableHours.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_availableHours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_availableHoursActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_upperLayout = new javax.swing.GroupLayout(pnl_upper);
        pnl_upper.setLayout(pnl_upperLayout);
        pnl_upperLayout.setHorizontalGroup(
            pnl_upperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_upperLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pnl_upperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator6)
                    .addGroup(pnl_upperLayout.createSequentialGroup()
                        .addGroup(pnl_upperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(72, 72, 72)
                        .addGroup(pnl_upperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(doctor_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(appointment_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_availableHours, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                            .addComponent(branch_combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnl_upperLayout.setVerticalGroup(
            pnl_upperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_upperLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addGroup(pnl_upperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(branch_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(pnl_upperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doctor_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnl_upperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_upperLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_upperLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(appointment_date, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(pnl_upperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btn_availableHours, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setForeground(new java.awt.Color(0, 0, 0));

        btn_1.setForeground(new java.awt.Color(0, 0, 0));
        btn_1.setText("9.00");
        btn_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_2.setForeground(new java.awt.Color(0, 0, 0));
        btn_2.setText("9.15");
        btn_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_4.setForeground(new java.awt.Color(0, 0, 0));
        btn_4.setText("9.30");
        btn_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_5.setForeground(new java.awt.Color(0, 0, 0));
        btn_5.setText("9.45");
        btn_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_3.setForeground(new java.awt.Color(0, 0, 0));
        btn_3.setText("10.00");
        btn_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_6.setForeground(new java.awt.Color(0, 0, 0));
        btn_6.setText("10.15");
        btn_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_7.setForeground(new java.awt.Color(0, 0, 0));
        btn_7.setText("10.30");
        btn_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_8.setForeground(new java.awt.Color(0, 0, 0));
        btn_8.setText("10.45");
        btn_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_9.setForeground(new java.awt.Color(0, 0, 0));
        btn_9.setText("11.00");
        btn_9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_10.setForeground(new java.awt.Color(0, 0, 0));
        btn_10.setText("11.15");
        btn_10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_11.setForeground(new java.awt.Color(0, 0, 0));
        btn_11.setText("11.30");
        btn_11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_15.setForeground(new java.awt.Color(0, 0, 0));
        btn_15.setText("13.15");
        btn_15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_16.setForeground(new java.awt.Color(0, 0, 0));
        btn_16.setText("13.30");
        btn_16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_18.setForeground(new java.awt.Color(0, 0, 0));
        btn_18.setText("14.00");
        btn_18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_17.setForeground(new java.awt.Color(0, 0, 0));
        btn_17.setText("13.45");
        btn_17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_12.setForeground(new java.awt.Color(0, 0, 0));
        btn_12.setText("11.45");
        btn_12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_13.setForeground(new java.awt.Color(0, 0, 0));
        btn_13.setText("12.00");
        btn_13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_14.setForeground(new java.awt.Color(0, 0, 0));
        btn_14.setText("13.00");
        btn_14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_19.setForeground(new java.awt.Color(0, 0, 0));
        btn_19.setText("14.15");
        btn_19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_20.setForeground(new java.awt.Color(0, 0, 0));
        btn_20.setText("14.30");
        btn_20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_21.setForeground(new java.awt.Color(0, 0, 0));
        btn_21.setText("14.45");
        btn_21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_22.setForeground(new java.awt.Color(0, 0, 0));
        btn_22.setText("15.00");
        btn_22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_23.setForeground(new java.awt.Color(0, 0, 0));
        btn_23.setText("15.15");
        btn_23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_25.setForeground(new java.awt.Color(0, 0, 0));
        btn_25.setText("15.45");
        btn_25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        btn_24.setForeground(new java.awt.Color(0, 0, 0));
        btn_24.setText("15.30");
        btn_24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });

        pnl_randevuBilgi.setBackground(new java.awt.Color(255, 255, 255));
        pnl_randevuBilgi.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "Appointment Summary", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        pnl_randevuBilgi.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Doctor:");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Branch:");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Appointment Date:");

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Appointment Hour:");

        lbl_doc_name.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lbl_doc_name.setForeground(new java.awt.Color(0, 0, 0));

        lbl_selected_branch.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lbl_selected_branch.setForeground(new java.awt.Color(0, 0, 0));

        lbl_app_hour.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lbl_app_hour.setForeground(new java.awt.Color(0, 0, 0));

        lbl_app_date.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lbl_app_date.setForeground(new java.awt.Color(0, 0, 0));

        btn_new_appointment.setBackground(new java.awt.Color(120, 255, 255));
        btn_new_appointment.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btn_new_appointment.setForeground(new java.awt.Color(0, 0, 0));
        btn_new_appointment.setText("NEW APPOINTMENT");
        btn_new_appointment.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_new_appointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_new_appointmentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_randevuBilgiLayout = new javax.swing.GroupLayout(pnl_randevuBilgi);
        pnl_randevuBilgi.setLayout(pnl_randevuBilgiLayout);
        pnl_randevuBilgiLayout.setHorizontalGroup(
            pnl_randevuBilgiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_randevuBilgiLayout.createSequentialGroup()
                .addGroup(pnl_randevuBilgiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_randevuBilgiLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnl_randevuBilgiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl_randevuBilgiLayout.createSequentialGroup()
                                .addGroup(pnl_randevuBilgiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(21, 21, 21)
                                .addGroup(pnl_randevuBilgiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_app_hour, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbl_selected_branch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(pnl_randevuBilgiLayout.createSequentialGroup()
                                .addGroup(pnl_randevuBilgiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(pnl_randevuBilgiLayout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18))
                                    .addGroup(pnl_randevuBilgiLayout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(17, 17, 17)))
                                .addGap(4, 4, 4)
                                .addGroup(pnl_randevuBilgiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbl_app_date, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                    .addComponent(lbl_doc_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addComponent(btn_new_appointment, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnl_randevuBilgiLayout.setVerticalGroup(
            pnl_randevuBilgiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_randevuBilgiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_randevuBilgiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(lbl_doc_name, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_randevuBilgiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_selected_branch, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(pnl_randevuBilgiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(lbl_app_hour, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnl_randevuBilgiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(lbl_app_date, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_new_appointment, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_21, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_16, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_11, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_17, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_22, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_12, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_18, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_23, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_13, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btn_5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btn_9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btn_14, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_15, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btn_19, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_20, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btn_24, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_25, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnl_randevuBilgi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnl_randevuBilgi, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btn_7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_17, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_22, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(btn_1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btn_6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btn_11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btn_16, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btn_21, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGap(43, 43, 43)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn_8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn_13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn_18, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_19, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_20, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn_23, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_24, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_25, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(174, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout tab_appointmentLayout = new javax.swing.GroupLayout(tab_appointment);
        tab_appointment.setLayout(tab_appointmentLayout);
        tab_appointmentLayout.setHorizontalGroup(
            tab_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_appointmentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnl_upper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(tab_appointmentLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        tab_appointmentLayout.setVerticalGroup(
            tab_appointmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_appointmentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnl_upper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tab_panel.addTab("New Appointment", tab_appointment);

        tab_appointmentHistory.setBackground(new java.awt.Color(170, 255, 255));
        tab_appointmentHistory.setForeground(new java.awt.Color(170, 255, 255));

        tbl_appointmentHistory.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tbl_appointmentHistory.setForeground(new java.awt.Color(0, 0, 0));
        tbl_appointmentHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hospital Name", "Branch", "Doctor Name", "Patient Name", "Appointment Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_appointmentHistory);

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Appointment History");

        btn_appRefresh.setBackground(new java.awt.Color(120, 255, 255));
        btn_appRefresh.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btn_appRefresh.setForeground(new java.awt.Color(0, 0, 0));
        btn_appRefresh.setText("REFRESH");
        btn_appRefresh.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_appRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_appRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tab_appointmentHistoryLayout = new javax.swing.GroupLayout(tab_appointmentHistory);
        tab_appointmentHistory.setLayout(tab_appointmentHistoryLayout);
        tab_appointmentHistoryLayout.setHorizontalGroup(
            tab_appointmentHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab_appointmentHistoryLayout.createSequentialGroup()
                .addContainerGap(226, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(151, 151, 151))
            .addGroup(tab_appointmentHistoryLayout.createSequentialGroup()
                .addGap(238, 238, 238)
                .addComponent(btn_appRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab_appointmentHistoryLayout.setVerticalGroup(
            tab_appointmentHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab_appointmentHistoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_appRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tab_panel.addTab("Appointment History", tab_appointmentHistory);

        tab_profile.setBackground(new java.awt.Color(170, 255, 255));

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Name:");

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Surname: ");

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Adress:");

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("Phone:");

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Mail:");

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Place Of Birth:");

        adres_txt.setColumns(20);
        adres_txt.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        adres_txt.setForeground(new java.awt.Color(0, 0, 0));
        adres_txt.setLineWrap(true);
        adres_txt.setRows(5);
        adres_txt.setEnabled(false);
        jScrollPane2.setViewportView(adres_txt);

        txt_name.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        txt_name.setForeground(new java.awt.Color(0, 0, 0));
        txt_name.setEnabled(false);

        txt_surname.setBackground(new java.awt.Color(255, 255, 255));
        txt_surname.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        txt_surname.setForeground(new java.awt.Color(0, 0, 0));
        txt_surname.setEnabled(false);

        mail_txt.setBackground(new java.awt.Color(255, 255, 255));
        mail_txt.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        mail_txt.setForeground(new java.awt.Color(0, 0, 0));
        mail_txt.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        mail_txt.setEnabled(false);

        txt_placebirth.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        txt_placebirth.setForeground(new java.awt.Color(0, 0, 0));
        txt_placebirth.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("TC No:");

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Date Of Birth");

        txt_tc.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        txt_tc.setForeground(new java.awt.Color(0, 0, 0));
        txt_tc.setEnabled(false);

        txt_datebirth.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        txt_datebirth.setForeground(new java.awt.Color(0, 0, 0));
        txt_datebirth.setEnabled(false);

        btn_saveProfile.setBackground(new java.awt.Color(120, 255, 255));
        btn_saveProfile.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btn_saveProfile.setForeground(new java.awt.Color(0, 0, 0));
        btn_saveProfile.setText("SAVE");
        btn_saveProfile.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_saveProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveProfileActionPerformed(evt);
            }
        });

        jLabel18.setForeground(new java.awt.Color(232, 0, 0));
        jLabel18.setText("*Click to update your informations.");

        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        jLabel19.setText("* Click to save your informations");

        jLabel27.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 0, 0));
        jLabel27.setText("Profile");

        jLabel28.setForeground(new java.awt.Color(232, 0, 0));
        jLabel28.setText("* If you want to change others please");

        jLabel29.setForeground(new java.awt.Color(232, 0, 0));
        jLabel29.setText("* You can  only change Mail, Phone and ");

        jLabel30.setForeground(new java.awt.Color(232, 0, 0));
        jLabel30.setText("contact administration.");

        txt_phone.setBackground(new java.awt.Color(255, 255, 255));
        txt_phone.setForeground(new java.awt.Color(0, 0, 0));
        try {
            txt_phone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("0##########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_phone.setEnabled(false);

        jLabel31.setForeground(new java.awt.Color(232, 0, 0));
        jLabel31.setText("   Adress sections.");

        btn_updateProfile.setBackground(new java.awt.Color(120, 255, 255));
        btn_updateProfile.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btn_updateProfile.setForeground(new java.awt.Color(0, 0, 0));
        btn_updateProfile.setText("UPDATE");
        btn_updateProfile.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_updateProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateProfileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tab_profileLayout = new javax.swing.GroupLayout(tab_profile);
        tab_profile.setLayout(tab_profileLayout);
        tab_profileLayout.setHorizontalGroup(
            tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab_profileLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(294, 294, 294))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab_profileLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txt_surname, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(txt_placebirth)
                    .addComponent(mail_txt)
                    .addComponent(txt_name)
                    .addComponent(txt_phone))
                .addGap(41, 41, 41)
                .addGroup(tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab_profileLayout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(76, 76, 76))
                    .addGroup(tab_profileLayout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1)))
                .addGroup(tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addGroup(tab_profileLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel30))
                    .addGroup(tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txt_tc, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txt_datebirth, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                        .addComponent(btn_updateProfile, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btn_saveProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77))
        );
        tab_profileLayout.setVerticalGroup(
            tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_profileLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel27)
                .addGap(18, 18, 18)
                .addGroup(tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tab_profileLayout.createSequentialGroup()
                        .addGroup(tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_tc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_surname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_datebirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50)
                .addGroup(tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab_profileLayout.createSequentialGroup()
                        .addGroup(tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tab_profileLayout.createSequentialGroup()
                                .addComponent(btn_updateProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel18)))
                        .addGap(50, 50, 50)
                        .addGroup(tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_saveProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab_profileLayout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_placebirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tab_profileLayout.createSequentialGroup()
                                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel30))))
                    .addGroup(tab_profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(mail_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(164, Short.MAX_VALUE))
        );

        mail_txt.getAccessibleContext().setAccessibleName("");

        tab_panel.addTab("Profile", tab_profile);

        tab_tests.setBackground(new java.awt.Color(170, 255, 255));

        tests_table.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tests_table.setForeground(new java.awt.Color(0, 0, 0));
        tests_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(tests_table);

        jLabel25.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setText("Health Tests");

        btn_saveTest.setBackground(new java.awt.Color(120, 255, 255));
        btn_saveTest.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btn_saveTest.setForeground(new java.awt.Color(0, 0, 0));
        btn_saveTest.setText("SAVE TEST");
        btn_saveTest.setToolTipText("Click to save as pdf  folder");
        btn_saveTest.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_saveTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveTestActionPerformed(evt);
            }
        });

        btn_inspectTest.setBackground(new java.awt.Color(120, 255, 255));
        btn_inspectTest.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btn_inspectTest.setForeground(new java.awt.Color(0, 0, 0));
        btn_inspectTest.setText("INSPECT TEST");
        btn_inspectTest.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_inspectTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inspectTestActionPerformed(evt);
            }
        });

        btn_testRefresh.setBackground(new java.awt.Color(120, 255, 255));
        btn_testRefresh.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btn_testRefresh.setForeground(new java.awt.Color(0, 0, 0));
        btn_testRefresh.setText("REFRESH");
        btn_testRefresh.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_testRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_testRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tab_testsLayout = new javax.swing.GroupLayout(tab_tests);
        tab_tests.setLayout(tab_testsLayout);
        tab_testsLayout.setHorizontalGroup(
            tab_testsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_testsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_testsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab_testsLayout.createSequentialGroup()
                        .addComponent(btn_testRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                        .addComponent(btn_inspectTest, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97)
                        .addComponent(btn_saveTest, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab_testsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel25)
                .addGap(286, 286, 286))
        );
        tab_testsLayout.setVerticalGroup(
            tab_testsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_testsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addGroup(tab_testsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_inspectTest, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(btn_testRefresh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_saveTest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(13, 13, 13))
        );

        tab_panel.addTab("Tests", tab_tests);

        tab_prescriptions.setBackground(new java.awt.Color(170, 255, 255));

        tbl_prescriptions.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tbl_prescriptions.setForeground(new java.awt.Color(0, 0, 0));
        tbl_prescriptions.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(tbl_prescriptions);

        btn_pressRefresh.setBackground(new java.awt.Color(120, 255, 255));
        btn_pressRefresh.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btn_pressRefresh.setForeground(new java.awt.Color(0, 0, 0));
        btn_pressRefresh.setText("REFRESH");
        btn_pressRefresh.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_pressRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pressRefreshActionPerformed(evt);
            }
        });

        btn_prescriptionSave.setBackground(new java.awt.Color(120, 255, 255));
        btn_prescriptionSave.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btn_prescriptionSave.setForeground(new java.awt.Color(0, 0, 0));
        btn_prescriptionSave.setText("SAVE ");
        btn_prescriptionSave.setToolTipText("Click to save as a pdf file");
        btn_prescriptionSave.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_prescriptionSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_prescriptionSaveActionPerformed(evt);
            }
        });

        btn_presInspect.setBackground(new java.awt.Color(120, 255, 255));
        btn_presInspect.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btn_presInspect.setForeground(new java.awt.Color(0, 0, 0));
        btn_presInspect.setText("INSPECT ");
        btn_presInspect.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btn_presInspect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_presInspectActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("Prescriptions");

        javax.swing.GroupLayout tab_prescriptionsLayout = new javax.swing.GroupLayout(tab_prescriptions);
        tab_prescriptions.setLayout(tab_prescriptionsLayout);
        tab_prescriptionsLayout.setHorizontalGroup(
            tab_prescriptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_prescriptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_prescriptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(tab_prescriptionsLayout.createSequentialGroup()
                        .addComponent(btn_pressRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97)
                        .addComponent(btn_presInspect, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                        .addComponent(btn_prescriptionSave, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(tab_prescriptionsLayout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tab_prescriptionsLayout.setVerticalGroup(
            tab_prescriptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_prescriptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tab_prescriptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab_prescriptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_presInspect, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_prescriptionSave, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_pressRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        tab_panel.addTab("Prescriptions", tab_prescriptions);

        lbl_displayHour.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lbl_displayHour.setForeground(new java.awt.Color(0, 0, 0));

        lbl_displayDate.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        javax.swing.GroupLayout pnl_mainLayout = new javax.swing.GroupLayout(pnl_main);
        pnl_main.setLayout(pnl_mainLayout);
        pnl_mainLayout.setHorizontalGroup(
            pnl_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_mainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tab_panel, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patient_informations, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_mainLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnl_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbl_displayDate, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(lbl_displayHour, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnl_mainLayout.setVerticalGroup(
            pnl_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_mainLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(pnl_mainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tab_panel)
                    .addGroup(pnl_mainLayout.createSequentialGroup()
                        .addComponent(patient_informations, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_displayDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_displayHour, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jMenuBar1.setBackground(new java.awt.Color(100, 176, 235));
        jMenuBar1.setBorder(null);
        jMenuBar1.setForeground(new java.awt.Color(61, 150, 222));
        jMenuBar1.setPreferredSize(new java.awt.Dimension(60, 35));

        menu_settings.setForeground(new java.awt.Color(0, 0, 0));
        menu_settings.setText("Settings");
        menu_settings.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 14)); // NOI18N

        menu_colorback.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_colorback.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        menu_colorback.setForeground(new java.awt.Color(0, 0, 0));
        menu_colorback.setText("Change Bacground Color");
        menu_colorback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_colorbackActionPerformed(evt);
            }
        });
        menu_settings.add(menu_colorback);
        menu_settings.add(jSeparator7);

        menu_close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_close.setForeground(new java.awt.Color(0, 0, 0));
        menu_close.setText("Close");
        menu_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_closeActionPerformed(evt);
            }
        });
        menu_settings.add(menu_close);

        menu_dateLabels.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        menu_dateLabels.setForeground(new java.awt.Color(0, 0, 0));
        menu_dateLabels.setSelected(true);
        menu_dateLabels.setText("Close Date And Time Labels");
        menu_dateLabels.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                menu_dateLabelsStateChanged(evt);
            }
        });
        menu_settings.add(menu_dateLabels);

        jMenuBar1.add(menu_settings);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    //WHILE CLOSING THIS FRAME A NEW FRAME IS OPEN WHICH I CREATED BY USING JAVA GRAPGHICS.

    public void Closing() {
        addWindowListener(
                new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent e) {
                ClosingFrame nframe = new ClosingFrame();
                nframe.setVisible(true);
                dispose();
            }
        }
        );
    }

    // THIS METHOD UPDATE THE INFORMATIONS OF PATIENT WHICH PATIENT'S CHANGED IN PROFILE SECTION.
    private void btn_saveProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveProfileActionPerformed

        boolean added = patientMain.patientUpdate(this.patientTCNO, adres_txt.getText(), txt_phone.getText(), mail_txt.getText());

        if (added) {
            JOptionPane.showMessageDialog(rootPane, "Changes were saved", "Successfull", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Mail and phone number should unique ", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_saveProfileActionPerformed

    private void btn_appRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_appRefreshActionPerformed
        patientAppointmentModel.setRowCount(0);
        listAppointmentHistory();
    }//GEN-LAST:event_btn_appRefreshActionPerformed

    //THIS METHOD ADDS NEW APPOINTMENT! 
    private void btn_new_appointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_new_appointmentActionPerformed

        boolean patientAppControl = patientMain.patientAppCount(patientMain.getId());
        if (patientAppControl) {
            JOptionPane.showMessageDialog(rootPane, "You already have 3 appointments.", "Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String appDateTime = app_Date + " " + app_Hour;
        if (appDateTime.contains("null")) {
            JOptionPane.showMessageDialog(rootPane, "Please choose appointment date.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int key = JOptionPane.showConfirmDialog(rootPane, "Do you confirm the appointment date, you will not be able to cancel appointment?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (key == JOptionPane.YES_OPTION) {
                boolean appAdded = patientMain.addAppointment(doctorMain.getBRANCHID(), doctorMain.getId(), patientMain.getId(), doctorMain.getName(), doctorMain.getSurname(), patientMain.getName(), appDateTime, doctorMain.getBranch(), patientMain.getSurname());
                //IF APPOINTMENT IS ADDED SUCCESSFULLY TO PATIENT THIS STATEMENT RUNS.
                if (appAdded) {
                    if (patientMain.updateWorkHour(doctorMain.getId(), appDateTime)) {
                        JOptionPane.showMessageDialog(rootPane, "Appointment was created, you have to be in hospital before appointment time.", "Appointment Created", JOptionPane.INFORMATION_MESSAGE);
                        patientAppointmentModel.setRowCount(0);
                        listAppointmentHistory();
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Internal error, please try again later", "Error", JOptionPane.ERROR_MESSAGE);
                    }

                } else {
                    JOptionPane.showMessageDialog(rootPane, "Internal error, please try again later", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {

                JOptionPane.showMessageDialog(rootPane, "Appointment was cancelled", "Cancelled", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btn_new_appointmentActionPerformed

    // IF DOCTOR HAS AVAILABLE HOUR, I CAN CHOOSE THE HOUR WHICH ARE GREEN ONES TO MAKE APPOINTMENT(A PATIENT CAN MAKE APPOINTMENT AT MOST 3 AT THE SAME TIME). 
    private void btn_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_1ActionPerformed
        JButton selectedHour = (JButton) evt.getSource();
        app_Hour = selectedHour.getText();
        lbl_doc_name.setText(doctorMain.getName().toUpperCase() + " " + doctorMain.getSurname().toUpperCase());
        lbl_selected_branch.setText(((String) branch_combo.getSelectedItem()).toUpperCase());
        lbl_app_hour.setText(selectedHour.getText());
        lbl_app_date.setText(app_Date);
    }//GEN-LAST:event_btn_1ActionPerformed

// (In this method)If I press the available hours button, I can see the available hours of the doctor which I selected in the first place.
    private void btn_availableHoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_availableHoursActionPerformed

        doctorMain = doctor.getDoctors(selectedDoctID);
        if (appointment_date.getDate() == null) {
            JOptionPane.showMessageDialog(rootPane, "Please, choose appointment date.", "Appointment Selection Needed!", JOptionPane.ERROR_MESSAGE);
        } else {

            Date date1 = new Date();
            SimpleDateFormat date = new SimpleDateFormat("dd-MM-yyyy");
            appointment_date.setMinSelectableDate(date1);
            app_Date = date.format(appointment_date.getDate());
            ArrayList<String> availableHourList = new ArrayList<>();
            availableHourList = doctorMain.getAvailableHours(selectedDoctID, app_Date);
            System.out.println(selectedDoctID + "---" + app_Date);
            ArrayList<JButton> buttonList = new ArrayList<>();
            buttonList = butonList();
            System.out.println(doctor_combo.getSelectedItem() + "-*-" + doctor_combo.getSelectedIndex());

            for (int i = 0; i < buttonList.size(); i++) {
                boolean availablee = false;
                buttonList.get(i).setEnabled(true);
                for (int j = 0; j < availableHourList.size(); j++) {
                    if (availableHourList.get(j) != null) {
                        String[] availableHour = availableHourList.get(j).split(" ");
                        if (availableHour[1] != null) {
                            String availablehour = availableHour[1];
                            if (buttonList.get(i).getText().equals(availablehour)) {
                                availablee = true;

                            }
                        }

                    }
                }

                // IF DOCTOR HAS AN AVAILABLE HOUR THIS IF-ELSE STATEMENT CHANGE THE COLOR OF BUTTON TO GREEN!!
                if (availablee) {
                    buttonList.get(i).setBackground(Color.green);

                } else {
                    buttonList.get(i).setEnabled(false);
                }
            }

        }
    }//GEN-LAST:event_btn_availableHoursActionPerformed
    //You can select the doctor from doctorCombobox. 
    private void doctor_comboİtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_doctor_comboİtemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String docSurname = (String) doctor_combo.getSelectedItem();
            String[] doc_nameSur = docSurname.split(" ");

            System.out.println(doctor_combo.getSelectedItem());
            if (doc_nameSur[0] != null && doc_nameSur[1] != null) {
                try {
                    for (int i = 0; i < admin.getDoctors().size(); i++) {
                        if (admin.getDoctors().get(i) != null && doc_nameSur[0].equals(admin.getDoctors().get(i).getName()) && doc_nameSur[1].equals(admin.getDoctors().get(i).getSurname())) {
                            System.out.println("doktor id -->>" + admin.getDoctors().get(i).getId());
                            selectedDoctID = admin.getDoctors().get(i).getId();
                            docBranchID = admin.getDoctors().get(i).getBRANCHID();
                            System.out.println("-->>" + selectedDoctID);
                        }
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(PatientGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_doctor_comboİtemStateChanged

    //When I change the branch combobox item this method does show the doctor of the selected branch.
    private void branch_comboİtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_branch_comboİtemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (branch_combo.getSelectedItem() != null && !branch_combo.getSelectedItem().equals("")) {
                try {
                    conn = DriverManager.getConnection("jdbc:derby://localhost:1527/HastaneYonetimSistemi", "sa", "as");
                    String query = "SELECT * FROM CLINICS WHERE NAME LIKE '%" + branch_combo.getSelectedItem() + "%'";
                    PreparedStatement pst = conn.prepareStatement(query);
                    ResultSet rs = pst.executeQuery();
                    while (rs.next()) {
                        selectedBranchID = rs.getInt("ID");
                    }
                    conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(PatientGUI.class.getName()).log(Level.SEVERE, null, ex);
                }

                try {
                    conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(PatientGUI.class.getName()).log(Level.SEVERE, null, ex);
                }

                doctor_combo.removeAllItems();
                doctor_combo.addItem("Choose Doctor");
                try {
                    for (int i = 0; i < admin.getDoctors().size(); i++) {
                        if (admin.getDoctors().get(i) != null && admin.getDoctors().get(i).getBRANCHID() == selectedBranchID) {
                            doctor_combo.addItem(admin.getDoctors().get(i).getName() + " " + admin.getDoctors().get(i).getSurname());
                        }
                    }

                } catch (SQLException ex) {
                    Logger.getLogger(PatientGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
    }//GEN-LAST:event_branch_comboİtemStateChanged
    }

    private void btn_testRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_testRefreshActionPerformed
        testModel.setRowCount(0);
        testHistory();

    }//GEN-LAST:event_btn_testRefreshActionPerformed

    private void btn_pressRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pressRefreshActionPerformed
        prescriptionModel.setRowCount(0);
        presCriptList();
    }//GEN-LAST:event_btn_pressRefreshActionPerformed

    // This method runs to save prescriptions as a pdf file.(I used itext-2.1.7 jar to convert my informations to pdf)
    private void btn_prescriptionSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_prescriptionSaveActionPerformed

        if (tbl_prescriptions.getRowCount() > 0) {
            String path = "";
            JFileChooser f = new JFileChooser();
            f.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            int x = f.showSaveDialog(jPanel4);
            if (x == JFileChooser.APPROVE_OPTION) {
                path = f.getSelectedFile().getPath();
                Document document = new Document();
                try {

                    String name = JOptionPane.showInputDialog(rootPane, "Please enter name for file.", "File Name", JOptionPane.INFORMATION_MESSAGE);
                    while (name == null) {
                        name = JOptionPane.showInputDialog(rootPane, "Please enter a valid file name.", "File Name", JOptionPane.INFORMATION_MESSAGE);

                    }
                    PdfWriter.getInstance(document, new FileOutputStream(path + name + ".pdf"));

                } catch (DocumentException | FileNotFoundException ex) {
                    Logger.getLogger(PharmacyGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                document.open();
                try {
                    document.add(new Paragraph("                                                                PRESCRIPTIONS \n "));
                } catch (DocumentException ex) {
                    Logger.getLogger(PharmacyGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                PdfPTable tbl = new PdfPTable(5);
                tbl.addCell("ID");
                tbl.addCell("DOCTOR NAME");
                tbl.addCell("PATIENT NAME");
                tbl.addCell("BRANCH");
                tbl.addCell("DATE");

                for (int i = 0; i < tbl_prescriptions.getRowCount(); i++) {
                    String id = tbl_prescriptions.getValueAt(i, 0).toString();
                    String docname = tbl_prescriptions.getValueAt(i, 1).toString();
                    String patname = tbl_prescriptions.getValueAt(i, 2).toString();
                    String branch = tbl_prescriptions.getValueAt(i, 3).toString();
                    String date = tbl_prescriptions.getValueAt(i, 4).toString();
                    tbl.addCell(id);
                    tbl.addCell(docname);
                    tbl.addCell(patname);
                    tbl.addCell(branch);
                    tbl.addCell(date);
                }
                try {
                    document.add(tbl);

                    JOptionPane.showMessageDialog(rootPane, "Report was saved as pdf.", "SAVED", JOptionPane.WARNING_MESSAGE);
                } catch (DocumentException ex) {
                    Logger.getLogger(PharmacyGUI.class.getName()).log(Level.SEVERE, null, ex);
                }

                document.close();

            } else {

            }

        } else {

            JOptionPane.showMessageDialog(rootPane, "There is no prescription.", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btn_prescriptionSaveActionPerformed

    // I can inspect prescriptions which I wanted.
    private void btn_presInspectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_presInspectActionPerformed
        if (tbl_prescriptions.getSelectedRow() != -1) {
            Object testID = tbl_prescriptions.getValueAt(tbl_prescriptions.getSelectedRow(), 0);
            int id = (int) testID;
            PrescriptionGUI prescriptionfrm = new PrescriptionGUI(id, "");
            prescriptionfrm.setVisible(true);
        }
    }//GEN-LAST:event_btn_presInspectActionPerformed
    // I can inspect test which I wanted.
    private void btn_inspectTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inspectTestActionPerformed
        if (tests_table.getSelectedRow() != -1) {
            String testID = (String) tests_table.getValueAt(tests_table.getSelectedRow(), 0);
            int id = Integer.parseInt(testID);
            TestGUI testfrm = new TestGUI(id);
            testfrm.setVisible(true);
        }
    }//GEN-LAST:event_btn_inspectTestActionPerformed

    // This method runs to save tests as a pdf file.(I used itext-2.1.7 jar to convert my informations to pdf)
    private void btn_saveTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveTestActionPerformed

        if (tests_table.getRowCount() > 0) {
            String path = "";
            JFileChooser f = new JFileChooser();
            f.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            int x = f.showSaveDialog(jPanel4);
            if (x == JFileChooser.APPROVE_OPTION) {
                path = f.getSelectedFile().getPath();
                Document document = new Document();
                try {

                    String name = JOptionPane.showInputDialog(rootPane, "Please enter name for file.", "File Name", JOptionPane.INFORMATION_MESSAGE);
                    while (name == null) {
                        name = JOptionPane.showInputDialog(rootPane, "Please enter a valid file name.", "File Name", JOptionPane.INFORMATION_MESSAGE);

                    }
                    PdfWriter.getInstance(document, new FileOutputStream(path + name + ".pdf"));

                } catch (DocumentException | FileNotFoundException ex) {
                    Logger.getLogger(PharmacyGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                document.open();
                try {
                    document.add(new Paragraph("                                                                       TESTS \n "));
                } catch (DocumentException ex) {
                    Logger.getLogger(PharmacyGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                PdfPTable tbl = new PdfPTable(7);
                tbl.addCell("ID");
                tbl.addCell("DOCTOR NAME");
                tbl.addCell("PATIENT NAME");
                tbl.addCell("TYPE");
                tbl.addCell("TEST DATE");
                tbl.addCell("RESULT DATE");
                tbl.addCell("COST");

                for (int i = 0; i < tests_table.getRowCount(); i++) {
                    String id = tests_table.getValueAt(i, 0).toString();
                    String docname = tests_table.getValueAt(i, 1).toString();
                    String patname = tests_table.getValueAt(i, 2).toString();
                    String type = tests_table.getValueAt(i, 3).toString();
                    String testdate = tests_table.getValueAt(i, 4).toString();
                    String resultdate = tests_table.getValueAt(i, 5).toString();
                    String cost = tests_table.getValueAt(i, 6).toString();

                    tbl.addCell(id);
                    tbl.addCell(docname);
                    tbl.addCell(patname);
                    tbl.addCell(type);
                    tbl.addCell(testdate);
                    tbl.addCell(resultdate);
                    tbl.addCell(cost);
                }
                try {
                    document.add(tbl);

                    JOptionPane.showMessageDialog(rootPane, "Report was saved as pdf.", "SAVED", JOptionPane.WARNING_MESSAGE);
                } catch (DocumentException ex) {
                    Logger.getLogger(PharmacyGUI.class.getName()).log(Level.SEVERE, null, ex);
                }

                document.close();

            } else {

            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "There is no test result.", "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btn_saveTestActionPerformed

// Menu item which turn off the program.
    private void menu_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_closeActionPerformed
        this.dispose();
    }//GEN-LAST:event_menu_closeActionPerformed

    //Menu item which changes the background color of the panels.
    private void menu_colorbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_colorbackActionPerformed
        Color firstCol = new Color(170, 255, 255);
        JColorChooser chooser = new JColorChooser();
        Color color = JColorChooser.showDialog(this, "Choose Bacground Color", Color.BLACK);
        if (color == null) {
            tab_appointment.setBackground(firstCol);
            tab_appointmentHistory.setBackground(firstCol);
            tab_panel.setBackground(firstCol);
            tab_prescriptions.setBackground(firstCol);
            tab_profile.setBackground(firstCol);
            tab_tests.setBackground(firstCol);

        } else {
            tab_appointment.setBackground(color);
            tab_appointmentHistory.setBackground(color);
            tab_panel.setBackground(color);
            tab_prescriptions.setBackground(color);
            tab_profile.setBackground(color);
            tab_tests.setBackground(color);
        }
    }//GEN-LAST:event_menu_colorbackActionPerformed

    // Menu item which turns or off the time label.
    private void menu_dateLabelsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_menu_dateLabelsStateChanged

        if (menu_dateLabels.isSelected()) {
            lbl_displayDate.setVisible(false);
            lbl_displayHour.setVisible(false);
        } else {
            lbl_displayDate.setVisible(true);
            lbl_displayHour.setVisible(true);
        }
    }//GEN-LAST:event_menu_dateLabelsStateChanged

    private void btn_updateProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateProfileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_updateProfileActionPerformed

    // I added a itemlistener to update toggle button.
    public void toggleUpdateListener() {

        ItemListener itemListener = (ItemEvent itemEvent) -> {
            int state1 = itemEvent.getStateChange();
            if (state1 == ItemEvent.SELECTED) {
                Patient p = new Patient();
                p = p.getPatient(this.patientTCNO);
                String mail = p.getMail();
                String phone = p.getPhone();
                String address = p.getAddress();
                adres_txt.setEnabled(true);
                txt_phone.setEnabled(true);
                mail_txt.setEnabled(true);
                adres_txt.setEnabled(true);
                txt_phone.setEnabled(true);
                mail_txt.setEnabled(true);
                adres_txt.setText(address);
                txt_phone.setText(phone);
                mail_txt.setText(mail);
                btn_saveProfile.setEnabled(true);

            } else {
                Patient p = new Patient();
                p = p.getPatient(this.patientTCNO);
                String mail = p.getMail();
                String phone = p.getPhone();
                String address = p.getAddress();
                adres_txt.setEnabled(false);
                txt_phone.setEnabled(false);
                mail_txt.setEnabled(false);
                adres_txt.setEnabled(false);
                txt_phone.setEnabled(false);
                mail_txt.setEnabled(false);
                adres_txt.setText(address);
                txt_phone.setText(phone);
                mail_txt.setText(mail);
                btn_saveProfile.setEnabled(false);
            }
        };
        btn_updateProfile.addItemListener(itemListener);

    }

    //I list test prescriptions of the patient in this method.
    private void presCriptList() {
        ArrayList<Prescription> prescripts = new ArrayList<>();
        prescripts = prescription.getPatientPrescriptions(patientMain.getId());
        for (int i = 0; i < prescripts.size(); i++) {
            if (prescripts.get(i) != null) {
                int id = prescripts.get(i).getId();
                String patientName = prescripts.get(i).getPatientName();
                String docName = prescripts.get(i).getDocName();
                String branch = prescripts.get(i).getBranch();
                String date = prescripts.get(i).getDate();
                prescriptionModel.addRow(new Object[]{id, docName, patientName, branch, date});
            }
        }

    }

    //I list test history of the patient in this method.
    private void testHistory() {
        ArrayList<Test> testList = new ArrayList<>();
        test.getPatientTests(patientMain.getId());
        testList = test.getPatientTests(patientMain.getId());

        for (int i = 0; i < testList.size(); i++) {
            if (testList.get(i) != null) {
                String id = Integer.toString(testList.get(i).getId());
                String patientName = testList.get(i).getPatientName();
                String docName = testList.get(i).getDocName();
                String type = testList.get(i).getTestType();
                String testDate = testList.get(i).getTestDate();
                String resultDate = testList.get(i).getResultDate();
                String cost = testList.get(i).getPrice();
                testModel.addRow(new Object[]{id, docName, patientName, type, testDate, resultDate, cost});
            }
        }
    }

    // Im displaying hour and date at the same time in the right panel in this method.
    private void displayTime() {
        new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date date = new Date();
                SimpleDateFormat d1 = new SimpleDateFormat("hh:mm:ss");
                lbl_displayHour.setText("TIME : " + d1.format(date));
            }
        }).start();
        Date date1 = new Date();
        SimpleDateFormat s1 = new SimpleDateFormat("yyyy-MM-dd");
        lbl_displayDate.setText("DATE: " + s1.format(date1));

    }

    //Im showing patient informations in right panel in this method.
    private void showPatientInfo() {
        try {
            conn = DriverManager.getConnection("jdbc:derby://localhost:1527/HastaneYonetimSistemi", "sa", "as");
            PreparedStatement pst = conn.prepareStatement("SELECT * FROM PATIENTS WHERE TCNO = ?");
            pst.setString(1, this.patientTCNO);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                String name = rs.getString("NAME");
                String sur = rs.getString("SURNAME");
                String phone = rs.getString("PHONE");
                String place = rs.getString("PLACEBIRTH");
                String date = rs.getString("BIRTHDATE");
                String adress = rs.getString("ADRESS");
                String mail = rs.getString("MAIL");

                lbl_name.setText(name.toUpperCase().toUpperCase());
                lbl_surname.setText(sur.toUpperCase());
                lbl_phone.setText(phone);
                lbl_palcebirth.setText(place.toUpperCase());
                lbl_dateBirth.setText(date);

                txt_name.setText(name.toUpperCase());
                txt_tc.setText(patientTCNO);
                txt_surname.setText(sur);
                txt_phone.setText(phone);
                txt_placebirth.setText(place.toUpperCase());
                txt_datebirth.setText(date);
                adres_txt.setText(adress);
                mail_txt.setText(mail);
                conn.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(PatientGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(PatientGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // I list branches in combobox.
    private void listBranches() {
        try {
            conn = DriverManager.getConnection("jdbc:derby://localhost:1527/HastaneYonetimSistemi", "sa", "as");
            String query = ("SELECT * FROM CLINICS");
            PreparedStatement pst = conn.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                String branchName = rs.getString("NAME");
                branch_combo.addItem(branchName);
            }
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(PatientGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(PatientGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // I put the appointment hour buttons into an arraylist in this method. 
    private ArrayList<JButton> butonList() {
        ArrayList<JButton> buttonList = new ArrayList<>();
        buttonList.add(btn_1);
        buttonList.add(btn_2);
        buttonList.add(btn_3);
        buttonList.add(btn_4);
        buttonList.add(btn_5);
        buttonList.add(btn_6);
        buttonList.add(btn_7);
        buttonList.add(btn_8);
        buttonList.add(btn_9);
        buttonList.add(btn_10);
        buttonList.add(btn_11);
        buttonList.add(btn_12);
        buttonList.add(btn_13);
        buttonList.add(btn_14);
        buttonList.add(btn_15);
        buttonList.add(btn_16);
        buttonList.add(btn_17);
        buttonList.add(btn_18);
        buttonList.add(btn_19);
        buttonList.add(btn_20);
        buttonList.add(btn_21);
        buttonList.add(btn_22);
        buttonList.add(btn_23);
        buttonList.add(btn_24);
        buttonList.add(btn_25);
        return buttonList;
    }

    //I'm listing appointment history of the pattient.
    private void listAppointmentHistory() {
        int patientID = patientMain.getId();
        ArrayList<Appointment> appointmentList = new ArrayList<>();
        appointmentList = appointment.getAppointments(patientID);
        String docAD;
        String branchName;
        String app_date;
        String status;
        for (int i = 0; i < appointmentList.size(); i++) {
            if (appointmentList.get(i) != null) {
                docAD = appointmentList.get(i).getDoctorName();
                app_date = appointmentList.get(i).getApp_date();
                branchName = appointmentList.get(i).getBranch();
                status = appointmentList.get(i).getStatus();
                patientAppointmentModel.addRow(new Object[]{hospitalName, branchName, patientMain.getName(), patientMain.getSurname(), docAD, app_date, status});
            }
        }
    }

    // This method contains settings of the start of project. 
    private void firstAdjustments() {
        Date date1 = new Date();
        appointment_date.setMinSelectableDate(date1);
        tbl_appointmentHistory.setModel(patientAppointmentModel);
        tests_table.setModel(testModel);
        tbl_prescriptions.setModel(prescriptionModel);
        tbl_appointmentHistory.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        tbl_appointmentHistory.getTableHeader().setOpaque(false);
        tbl_appointmentHistory.getTableHeader().setBackground(new Color(32, 136, 203));
        tbl_appointmentHistory.getTableHeader().setForeground(new Color(0, 0, 0));
        tbl_appointmentHistory.setRowHeight(25);
        btn_saveProfile.setEnabled(false);
        Closing();
        butonList();
        showPatientInfo();
        displayTime();
        listBranches();
        listAppointmentHistory();
        testHistory();
        presCriptList();
        toggleUpdateListener();
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new PatientGUI().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(PatientGUI.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea adres_txt;
    private com.toedter.calendar.JDateChooser appointment_date;
    private javax.swing.JComboBox<String> branch_combo;
    private javax.swing.JButton btn_1;
    private javax.swing.JButton btn_10;
    private javax.swing.JButton btn_11;
    private javax.swing.JButton btn_12;
    private javax.swing.JButton btn_13;
    private javax.swing.JButton btn_14;
    private javax.swing.JButton btn_15;
    private javax.swing.JButton btn_16;
    private javax.swing.JButton btn_17;
    private javax.swing.JButton btn_18;
    private javax.swing.JButton btn_19;
    private javax.swing.JButton btn_2;
    private javax.swing.JButton btn_20;
    private javax.swing.JButton btn_21;
    private javax.swing.JButton btn_22;
    private javax.swing.JButton btn_23;
    private javax.swing.JButton btn_24;
    private javax.swing.JButton btn_25;
    private javax.swing.JButton btn_3;
    private javax.swing.JButton btn_4;
    private javax.swing.JButton btn_5;
    private javax.swing.JButton btn_6;
    private javax.swing.JButton btn_7;
    private javax.swing.JButton btn_8;
    private javax.swing.JButton btn_9;
    private javax.swing.JButton btn_appRefresh;
    private javax.swing.JButton btn_availableHours;
    private javax.swing.JButton btn_inspectTest;
    private javax.swing.JButton btn_new_appointment;
    private javax.swing.JButton btn_presInspect;
    private javax.swing.JButton btn_prescriptionSave;
    private javax.swing.JButton btn_pressRefresh;
    private javax.swing.JButton btn_saveProfile;
    private javax.swing.JButton btn_saveTest;
    private javax.swing.JButton btn_testRefresh;
    private javax.swing.JToggleButton btn_updateProfile;
    private javax.swing.JComboBox<String> doctor_combo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JLabel lbl_app_date;
    private javax.swing.JLabel lbl_app_hour;
    private javax.swing.JLabel lbl_dateBirth;
    private javax.swing.JLabel lbl_displayDate;
    private javax.swing.JLabel lbl_displayHour;
    private javax.swing.JLabel lbl_doc_name;
    private javax.swing.JLabel lbl_isim1;
    private javax.swing.JLabel lbl_isim2;
    private javax.swing.JLabel lbl_isim4;
    private javax.swing.JLabel lbl_isim5;
    private javax.swing.JLabel lbl_isim6;
    private javax.swing.JLabel lbl_name;
    private javax.swing.JLabel lbl_palcebirth;
    private javax.swing.JLabel lbl_phone;
    private javax.swing.JLabel lbl_selected_branch;
    private javax.swing.JLabel lbl_surname;
    private javax.swing.JTextField mail_txt;
    private javax.swing.JMenuItem menu_close;
    private javax.swing.JMenuItem menu_colorback;
    private javax.swing.JRadioButtonMenuItem menu_dateLabels;
    private javax.swing.JMenu menu_settings;
    private javax.swing.JPanel patient_informations;
    private javax.swing.JPanel pnl_main;
    private javax.swing.JPanel pnl_randevuBilgi;
    private javax.swing.JPanel pnl_upper;
    private javax.swing.JPanel tab_appointment;
    private javax.swing.JPanel tab_appointmentHistory;
    private javax.swing.JTabbedPane tab_panel;
    private javax.swing.JPanel tab_prescriptions;
    private javax.swing.JPanel tab_profile;
    private javax.swing.JPanel tab_tests;
    private javax.swing.JTable tbl_appointmentHistory;
    private javax.swing.JTable tbl_prescriptions;
    private javax.swing.JTable tests_table;
    private javax.swing.JTextField txt_datebirth;
    private javax.swing.JTextField txt_name;
    private javax.swing.JFormattedTextField txt_phone;
    private javax.swing.JTextField txt_placebirth;
    private javax.swing.JTextField txt_surname;
    private javax.swing.JTextField txt_tc;
    // End of variables declaration//GEN-END:variables
}
